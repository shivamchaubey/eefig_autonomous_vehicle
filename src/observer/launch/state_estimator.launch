<launch>
    
    <!-- SYSTEM MODEL -->
    <?ignore
    <param name="m"             type="double"   value="2.483" />
    <param name="rho"             type="double"   value="1.225" />    
    <param name="lr"            type="double"   value="0.1203" />
    <param name="lf"            type="double"   value="0.1377" />
    <param name="Cm0"            type="double"   value="10.1305" />
    <param name="Cm1"            type="double"   value="1.05294" />
    <param name="C0"            type="double"   value="3.68918" />
    <param name="C1"            type="double"   value="0.0306803" />
    <param name="Cd_A"            type="double"   value="-0.657645" />
    <param name="Caf"            type="double"   value="40.62927783" />
    <param name="Car"            type="double"   value="69.55846999" />
    <param name="Iz"            type="double"   value="1.01950479" />
    ?>
    <?ignore
    <param name="m"             type="double"   value="2.483" />
    <param name="rho"             type="double"   value="1.225" />    
    <param name="lr"            type="double"   value="0.1203" />
    <param name="lf"            type="double"   value="0.1377" />
    <param name="Cm0"            type="double"   value="10.1305" />
    <param name="Cm1"            type="double"   value="1.05294" />
    <param name="C0"            type="double"   value="3.68918" />
    <param name="C1"            type="double"   value="0.0306803" />
    <param name="Cd_A"            type="double"   value="-0.657645" />
    <param name="Caf"            type="double"   value="1.3958" />
    <param name="Car"            type="double"   value="1.6775" />
    <param name="Iz"            type="double"   value="0.04698869" />
    ?>
    <!-- LOAD ESTIMATOR TYPE -->

    <arg name="SWITCHING_LQR" default="1"/>

    <arg name="SIM" default="0"/>

    <!-- switching  LQR type --> 
    <group if="$(arg SWITCHING_LQR)">
        <node pkg="observer" type="switching_lqr_old.py" name="switching_lqr_observer" output="screen">
        

        <!-- contained in observer/data/-->
        
        <!--param name="lqr_gain_path"   type="string"  value="/data/LQR_16_04_2021/scipy_switching_LQR_gain.mat" if="$(arg SWITCHING_LQR)"/-->
       
        <!--param name="lqr_gain_path"   type="string"  value="/data/LQR_16_04_2021/LIDAR_switching_LQR_gain.mat" if="$(arg SWITCHING_LQR)"/-->
        <!--param name="lqr_gain_path"   type="string"  value="/data/LQR_16_04_2021/steer_035_switching_LQR_gain.mat" if="$(arg SWITCHING_LQR)"/-->
        <!--param name="lqr_gain_path"   type="string"  value="/data/LQR_16_04_2021/meas_switching_LQR_gain.mat" if="$(arg SWITCHING_LQR)"/-->
        <param name="lqr_gain_path"   type="string"  value="/data/LQR_16_04_2021/changed_weight_switching_LQR_gain.mat" if="$(arg SWITCHING_LQR)"/>
        


        <param name="lidar_pose"          type="bool"      value="true" />
        <param name="cam_pose"            type="bool"      value="false" />
        <param name="fusion_cam_lidar"    type="bool"      value="false" />

        <param name="visualization"    type="bool"      value="false" />
        <param name="record_data"      type="bool"      value="false" />


        <param name="publish_frequency" type="double" value="100.0" />
        

        <!-- sensor Moving average -->
        <param name="MA_status"      type="bool" value="True" />
        <param name="fcam_MA_window" type="int" value="50" />
        <param name="imu_MA_window"  type="int" value="50" />
        <param name="enc_MA_window"  type="int" value="50" />

        <!-- deadzone for the motor where it is stalled (-0.8 to 0.8)-->
        <param name="deadzone"    type="double" value="0.05" />
        
        <!-- Pure translation and rotation don't confuse with refence transformation -->
        <param name="init_x"    type="double" value="0.0" />
        <param name="init_y"    type="double" value="0.0" />
        <param name="init_yaw"  type="double" value="0.0" />


        <!-- FOR TESTING PUSPOSE -->
        <param name="sim_on"      type="bool" value="1" if="$(arg SIM)"/>
        <param name="x_tf"      type="double" value="0.1" if="$(arg SIM)"/>
        <param name="y_tf"      type="double" value="0.0" if="$(arg SIM)"/>
        <!-- Map rotation -->
        <param name="theta_tf"  type="double" value="0.0" if="$(arg SIM)"/>
        <!-- Vehicle orientation-->
        <param name="yaw_tf"    type="double" value="0.0" if="$(arg SIM)"/>


        <!-- If transformation needed from estamed frame of reference to another -->

        <param name="sim_on"      type="bool" value="0" unless="$(arg SIM)"/>        
        <param name="x_tf"      type="double" value="0.85" unless="$(arg SIM)"/> <!--add x value if towards origin else subtract -->
        <param name="y_tf"      type="double" value="-0.85" unless="$(arg SIM)"/> <!--subtract y value if towards origin else add -->
        <!-- Map rotation -->
        <param name="theta_tf"  type="double" value="-90.0" unless="$(arg SIM)"/>
        <!-- Vehicle orientation-->
        <param name="yaw_tf"    type="double" value="-90.0" unless="$(arg SIM)"/>



        <?ignore
        <!-- If transformation needed from estamed frame of reference to another -->
        <param name="x_tf"      type="double" value="0.42998579" />
        <param name="y_tf"      type="double" value="-1.1021565" />
        <!-- Map rotation -->
        <param name="theta_tf"  type="double" value="-90.0" />
        <!-- Vehicle orientation-->
        <param name="yaw_tf"    type="double" value="-90.0" />
        

        
        <!-- FOR TESTING PUSPOSE -->
        <param name="x_tf"      type="double" value="0.0" />
        <param name="y_tf"      type="double" value="0.0" />
        <!-- Map rotation -->
        <param name="theta_tf"  type="double" value="0.0" />
        <!-- Vehicle orientation-->
        <param name="yaw_tf"    type="double" value="0.0" />
        ?>


        </node>
    </group>

    <!-- SIMPLE LQR --> 
    <group unless="$(arg SWITCHING_LQR)">
        <node pkg="observer" type="lqr_state_estimator.py" name="lqr_observer" output="screen">
        


        <!-- contained in observer/data/-->
        <param name="lqr_gain_path"   type="string"  value="/data/LQR_16_04_2021/LQR_gain.mat" unless="$(arg SWITCHING_LQR)"/>
        
        <param name="visualization"    type="bool"      value="False" />
        <param name="record_data"      type="bool"      value="False" />

        <param name="publish_frequency" type="double" value="100.0" />
        

        <!-- sensor Moving average -->
        <param name="MA_status"      type="bool" value="True" />
        <param name="fcam_MA_window" type="int" value="50" />
        <param name="imu_MA_window"  type="int" value="50" />
        <param name="enc_MA_window"  type="int" value="50" />

        <!-- deadzone for the motor where it is stalled (-0.8 to 0.8)-->
        <param name="deadzone"    type="double" value="0.8" />
        
        <!-- Pure translation and rotation don't confuse with refence transformation -->
        <param name="init_x"    type="double" value="0.15" />
        <param name="init_y"    type="double" value="0.005" />
        <param name="init_yaw"  type="double" value="0.01" />


        <!-- If transformation needed from estamed frame of reference to another -->
        <param name="x_tf"      type="double" value="0.42998579" />
        <param name="y_tf"      type="double" value="-1.1021565" />
        <!-- Map rotation -->
        <param name="theta_tf"  type="double" value="-90.0" />
        <!-- Vehicle orientation-->
        <param name="yaw_tf"    type="double" value="-90.0" />


        <?ignore        
        <!-- FOR TESTING PUSPOSE -->
        <param name="x_tf"      type="double" value="0.0" />
        <param name="y_tf"      type="double" value="0.0" />
        <!-- Map rotation -->
        <param name="theta_tf"  type="double" value="0.0" />
        <!-- Vehicle orientation-->
        <param name="yaw_tf"    type="double" value="0.0" />
        ?>


        </node>

    </group> 


    <!--node pkg="simulator" type="2Dplot.py" name="visualization" output="screen">
    </node>-->

</launch>
